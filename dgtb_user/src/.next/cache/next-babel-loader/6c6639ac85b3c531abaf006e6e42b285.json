{"ast":null,"code":"import { takeLatest, all, put } from \"redux-saga/effects\";\nimport { APP_LOGIN, APP_LOGOUT, APP_VERIFY_TOKEN } from \"../actions/constants\";\nimport auth from \"../api/auth\";\nimport { setAuthState, saveLoggedUser, removeLoggedUser } from \"../actions/auth\";\nimport { createRequestSaga } from \"./common\";\nimport { message } from \"antd\";\nconst requestLogin = createRequestSaga({\n  request: auth.login,\n  key: \"login\",\n  cancel: APP_LOGOUT,\n  success: [res => saveLoggedUser(res), () => setAuthState(true)],\n  functionFailure: [res => message.error(res.message)]\n});\n\nconst requestVerifyToken = function* () {};\n\nconst requestLogout = function* () {\n  yield all([yield put(removeLoggedUser()), yield put(setAuthState(false))]);\n};\n\nexport default [function* fetchWatcher() {\n  yield all([takeLatest(APP_LOGIN, requestLogin), takeLatest(APP_VERIFY_TOKEN, requestVerifyToken), takeLatest(APP_LOGOUT, requestLogout)]);\n}];","map":{"version":3,"sources":["C:/Users/vuhon/Desktop/dgtb_user/src/redux/sagas/auth.js"],"names":["takeLatest","all","put","APP_LOGIN","APP_LOGOUT","APP_VERIFY_TOKEN","auth","setAuthState","saveLoggedUser","removeLoggedUser","createRequestSaga","message","requestLogin","request","login","key","cancel","success","res","functionFailure","error","requestVerifyToken","requestLogout","fetchWatcher"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,QAAqC,oBAArC;AACA,SAASC,SAAT,EAAoBC,UAApB,EAAgCC,gBAAhC;AAEA,OAAOC,IAAP;AAEA,SACEC,YADF,EAEEC,cAFF,EAGEC,gBAHF;AAKA,SAASC,iBAAT;AACA,SAASC,OAAT,QAAwB,MAAxB;AAEA,MAAMC,YAAY,GAAGF,iBAAiB,CAAC;AACrCG,EAAAA,OAAO,EAAEP,IAAI,CAACQ,KADuB;AAErCC,EAAAA,GAAG,EAAE,OAFgC;AAGrCC,EAAAA,MAAM,EAAEZ,UAH6B;AAIrCa,EAAAA,OAAO,EAAE,CAAEC,GAAD,IAASV,cAAc,CAACU,GAAD,CAAxB,EAA+B,MAAMX,YAAY,CAAC,IAAD,CAAjD,CAJ4B;AAMrCY,EAAAA,eAAe,EAAE,CAAED,GAAD,IAASP,OAAO,CAACS,KAAR,CAAcF,GAAG,CAACP,OAAlB,CAAV;AANoB,CAAD,CAAtC;;AASA,MAAMU,kBAAkB,GAAG,aAAa,CAAE,CAA1C;;AAEA,MAAMC,aAAa,GAAG,aAAa;AACjC,QAAMrB,GAAG,CAAC,CAAC,MAAMC,GAAG,CAACO,gBAAgB,EAAjB,CAAV,EAAgC,MAAMP,GAAG,CAACK,YAAY,CAAC,KAAD,CAAb,CAAzC,CAAD,CAAT;AACD,CAFD;;AAIA,eAAe,CACb,UAAUgB,YAAV,GAAyB;AACvB,QAAMtB,GAAG,CAAC,CACRD,UAAU,CAACG,SAAD,EAAYS,YAAZ,CADF,EAERZ,UAAU,CAACK,gBAAD,EAAmBgB,kBAAnB,CAFF,EAGRrB,UAAU,CAACI,UAAD,EAAakB,aAAb,CAHF,CAAD,CAAT;AAKD,CAPY,CAAf","sourcesContent":["import { takeLatest, all, put } from \"redux-saga/effects\";\r\nimport { APP_LOGIN, APP_LOGOUT, APP_VERIFY_TOKEN } from \"../actions/constants\";\r\n\r\nimport auth from \"../api/auth\";\r\n\r\nimport {\r\n  setAuthState,\r\n  saveLoggedUser,\r\n  removeLoggedUser,\r\n} from \"../actions/auth\";\r\nimport { createRequestSaga } from \"./common\";\r\nimport { message } from \"antd\";\r\n\r\nconst requestLogin = createRequestSaga({\r\n  request: auth.login,\r\n  key: \"login\",\r\n  cancel: APP_LOGOUT,\r\n  success: [(res) => saveLoggedUser(res), () => setAuthState(true)],\r\n\r\n  functionFailure: [(res) => message.error(res.message)],\r\n});\r\n\r\nconst requestVerifyToken = function* () {};\r\n\r\nconst requestLogout = function* () {\r\n  yield all([yield put(removeLoggedUser()), yield put(setAuthState(false))]);\r\n};\r\n\r\nexport default [\r\n  function* fetchWatcher() {\r\n    yield all([\r\n      takeLatest(APP_LOGIN, requestLogin),\r\n      takeLatest(APP_VERIFY_TOKEN, requestVerifyToken),\r\n      takeLatest(APP_LOGOUT, requestLogout),\r\n    ]);\r\n  },\r\n];\r\n"]},"metadata":{},"sourceType":"module"}