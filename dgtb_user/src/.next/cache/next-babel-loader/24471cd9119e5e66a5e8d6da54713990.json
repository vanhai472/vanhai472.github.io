{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { takeLatest, all, put } from \"redux-saga/effects\";\nimport { APP_LOGIN, APP_LOGOUT, APP_VERIFY_TOKEN } from \"../actions/constants\";\nimport auth from \"../api/auth\";\nimport { setAuthState, saveLoggedUser, removeLoggedUser } from \"../actions/auth\";\nimport { createRequestSaga } from \"./common\";\nimport { message } from \"antd\";\nvar requestLogin = createRequestSaga({\n  request: auth.login,\n  key: \"login\",\n  cancel: APP_LOGOUT,\n  success: [function (res) {\n    return saveLoggedUser(res);\n  }, function () {\n    return setAuthState(true);\n  }],\n  functionFailure: [function (res) {\n    return message.error(res.message);\n  }]\n});\n\nvar requestVerifyToken = /*#__PURE__*/_regeneratorRuntime.mark(function requestVerifyToken() {\n  return _regeneratorRuntime.wrap(function requestVerifyToken$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, requestVerifyToken);\n});\n\nvar requestLogout = /*#__PURE__*/_regeneratorRuntime.mark(function requestLogout() {\n  return _regeneratorRuntime.wrap(function requestLogout$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.t0 = all;\n          _context2.next = 3;\n          return put(removeLoggedUser());\n\n        case 3:\n          _context2.t1 = _context2.sent;\n          _context2.next = 6;\n          return put(setAuthState(false));\n\n        case 6:\n          _context2.t2 = _context2.sent;\n          _context2.t3 = [_context2.t1, _context2.t2];\n          _context2.next = 10;\n          return (0, _context2.t0)(_context2.t3);\n\n        case 10:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, requestLogout);\n});\n\nexport default [/*#__PURE__*/_regeneratorRuntime.mark(function fetchWatcher() {\n  return _regeneratorRuntime.wrap(function fetchWatcher$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return all([takeLatest(APP_LOGIN, requestLogin), takeLatest(APP_VERIFY_TOKEN, requestVerifyToken), takeLatest(APP_LOGOUT, requestLogout)]);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, fetchWatcher);\n})];","map":{"version":3,"sources":["C:/Users/vuhon/Desktop/dgtb_user/src/redux/sagas/auth.js"],"names":["takeLatest","all","put","APP_LOGIN","APP_LOGOUT","APP_VERIFY_TOKEN","auth","setAuthState","saveLoggedUser","removeLoggedUser","createRequestSaga","message","requestLogin","request","login","key","cancel","success","res","functionFailure","error","requestVerifyToken","requestLogout","fetchWatcher"],"mappings":";AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,QAAqC,oBAArC;AACA,SAASC,SAAT,EAAoBC,UAApB,EAAgCC,gBAAhC;AAEA,OAAOC,IAAP;AAEA,SACEC,YADF,EAEEC,cAFF,EAGEC,gBAHF;AAKA,SAASC,iBAAT;AACA,SAASC,OAAT,QAAwB,MAAxB;AAEA,IAAMC,YAAY,GAAGF,iBAAiB,CAAC;AACrCG,EAAAA,OAAO,EAAEP,IAAI,CAACQ,KADuB;AAErCC,EAAAA,GAAG,EAAE,OAFgC;AAGrCC,EAAAA,MAAM,EAAEZ,UAH6B;AAIrCa,EAAAA,OAAO,EAAE,CAAC,UAACC,GAAD;AAAA,WAASV,cAAc,CAACU,GAAD,CAAvB;AAAA,GAAD,EAA+B;AAAA,WAAMX,YAAY,CAAC,IAAD,CAAlB;AAAA,GAA/B,CAJ4B;AAMrCY,EAAAA,eAAe,EAAE,CAAC,UAACD,GAAD;AAAA,WAASP,OAAO,CAACS,KAAR,CAAcF,GAAG,CAACP,OAAlB,CAAT;AAAA,GAAD;AANoB,CAAD,CAAtC;;AASA,IAAMU,kBAAkB,yCAAG,SAArBA,kBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAArBA,kBAAqB;AAAA,CAAH,CAAxB;;AAEA,IAAMC,aAAa,yCAAG,SAAhBA,aAAgB;AAAA;AAAA;AAAA;AAAA;AAAA,yBACdrB,GADc;AAAA;AACT,iBAAMC,GAAG,CAACO,gBAAgB,EAAjB,CAAT;;AADS;AAAA;AAAA;AACsB,iBAAMP,GAAG,CAACK,YAAY,CAAC,KAAD,CAAb,CAAT;;AADtB;AAAA;AAAA;AAAA;AACpB;;AADoB;AAAA;AAAA;AAAA;AAAA;AAAA,KAAhBe,aAAgB;AAAA,CAAH,CAAnB;;AAIA,eAAe,uCACb,SAAUC,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMtB,GAAG,CAAC,CACRD,UAAU,CAACG,SAAD,EAAYS,YAAZ,CADF,EAERZ,UAAU,CAACK,gBAAD,EAAmBgB,kBAAnB,CAFF,EAGRrB,UAAU,CAACI,UAAD,EAAakB,aAAb,CAHF,CAAD,CAAT;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA,KAAUC,YAAV;AAAA,CADa,EAAf","sourcesContent":["import { takeLatest, all, put } from \"redux-saga/effects\";\r\nimport { APP_LOGIN, APP_LOGOUT, APP_VERIFY_TOKEN } from \"../actions/constants\";\r\n\r\nimport auth from \"../api/auth\";\r\n\r\nimport {\r\n  setAuthState,\r\n  saveLoggedUser,\r\n  removeLoggedUser,\r\n} from \"../actions/auth\";\r\nimport { createRequestSaga } from \"./common\";\r\nimport { message } from \"antd\";\r\n\r\nconst requestLogin = createRequestSaga({\r\n  request: auth.login,\r\n  key: \"login\",\r\n  cancel: APP_LOGOUT,\r\n  success: [(res) => saveLoggedUser(res), () => setAuthState(true)],\r\n\r\n  functionFailure: [(res) => message.error(res.message)],\r\n});\r\n\r\nconst requestVerifyToken = function* () {};\r\n\r\nconst requestLogout = function* () {\r\n  yield all([yield put(removeLoggedUser()), yield put(setAuthState(false))]);\r\n};\r\n\r\nexport default [\r\n  function* fetchWatcher() {\r\n    yield all([\r\n      takeLatest(APP_LOGIN, requestLogin),\r\n      takeLatest(APP_VERIFY_TOKEN, requestVerifyToken),\r\n      takeLatest(APP_LOGOUT, requestLogout),\r\n    ]);\r\n  },\r\n];\r\n"]},"metadata":{},"sourceType":"module"}